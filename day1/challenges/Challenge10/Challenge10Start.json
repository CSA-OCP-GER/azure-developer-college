    {
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUser": {
            "type": "string",
            "defaultValue": "demouser",
            "metadata": {
                "description": "Admin user name of vm"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for admin user"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_F2s_v2"
        },
        "DiskSku": {
            "type": "String",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS",
                "UltraSSD_LRS"
            ],
            "metadata": {
                "description": "description"
            }
        },
        "vmNames": {
            "type": "array",
            "defaultValue": [
                "vmred",
                "vmblue"
            ]
        }
    },
    "variables": {
        "virtualNetworks_azurevnet_name": "[concat('vnet-',variables('vmNamePrefix'))]",
        "VMSubnet": "snet-frontend",
        "vmNamePrefix": "[replace(resourceGroup().name,'rg-','')]",
        "storageAccountName": "[toLower(concat('sa',replace(variables('vmNamePrefix'),'-',''),substring(uniqueString(resourceGroup().id),0,4)))]",
        "nsgName": "[concat('nsg-',variables('vmNamePrefix'))]",
        "PIPName": "[concat('pip-',variables('vmNamePrefix'))]",
        "availabilitySetName": "[concat('av-',variables('vmNamePrefix'))]",
        "domainNameLabel": "[toLower(concat('farm',substring(uniqueString(resourceGroup().id),0,4)))]",
        "lbName": "[variables('vmNamePrefix')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-08-01",
            "name": "[variables('virtualNetworks_azurevnet_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.200.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('VMSubnet')]",
                        "properties": {
                            "addressPrefix": "192.168.200.0/26",
                            "serviceEndpoints": [
                            ],
                            "delegations": [
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-01-01",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "default-allow-http",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1001,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[variables('PIPName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('domainNameLabel')]"
                },
                "ipTags": [
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmNames')[copyIndex()],'-nic1')]",
            "copy": {
                "name": "niccopy",
                "count": "[length(parameters('vmNames'))]"
            },
            "location": "[resourceGroup().location]",
            "apiVersion": "2018-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/loadBalancers/', variables('lbName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_azurevnet_name'), variables('VMSubnet'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'bepool1')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "properties": {

                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmNames')[copyIndex()]]",
            "copy": {
                "name": "vmcopy",
                "count": "[length(parameters('vmNames'))]"
            },
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('vmNames')[copyIndex()],'-nic1')  )]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmNames')[copyIndex()]]",
                    "adminUsername": "[parameters('adminUser')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('vmNames')[copyIndex()],'-osdisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[parameters('DiskSku')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNames')[copyIndex()],'-nic1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmNames')[copyIndex()],'/','dscextension')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/',parameters('vmNames')[copyIndex()])]"
            ],
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "dsccopy",
                "count": "[length(parameters('vmNames'))]"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.73",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "https://github.com/CSA-OCP-GER/azure-developer-college/raw/master/day1/challenges/Challenge%207/wwwFarmConfig.zip",
                    "configurationFunction": "wwwFarmConfig.ps1\\wwwFarmConfig",
                    "properties": {
                        "webZipURI": "https://github.com/CSA-OCP-GER/azure-developer-college/raw/master/day1/challenges/Challenge%207/web.zip"
                    }
                },
                "protectedSettings": {
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-11-01",
            "name": "[variables('lbName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('PIPName'))]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PIPName'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool1"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lbhttp",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/bepool1')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/http80')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "http80",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                ],
                "inboundNatPools": [
                ]
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "storageUri": {
            "type": "string",
            "value": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
        }
    }
}
